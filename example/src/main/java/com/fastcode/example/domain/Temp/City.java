package com.fastcode.example.domain.Temp;

import java.time.*;
import java.util.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@Entity
@Table(schema = "DVDRENTAL", name = "CITY")
public class City {

    @OneToMany(
        targetEntity = com.fastcode.example.domain.Temp.Address.class,
        mappedBy = "city",
        cascade = CascadeType.MERGE
    )
    private Set<Address> address = new HashSet<Address>();

    @Basic
    @Column(nullable = false, length = 50)
    private String city;

    @Id
    @Column(name = "CITY_ID")
    private int cityId;

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
    @JoinColumn(name = "COUNTRY_ID", nullable = false)
    private Country country;

    @Basic
    @Column(name = "LAST_UPDATE", nullable = false)
    private LocalDateTime lastUpdate;

    public City() {}

    public City(int cityId) {
        this.cityId = cityId;
    }

    public Set<Address> getAddress() {
        return address;
    }

    public void setAddress(Set<Address> address) {
        this.address = address;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public int getCityId() {
        return cityId;
    }

    public void setCityId(int cityId) {
        this.cityId = cityId;
    }

    public Country getCountry() {
        return country;
    }

    public void setCountry(Country country) {
        this.country = country;
    }

    public LocalDateTime getLastUpdate() {
        return lastUpdate;
    }

    public void setLastUpdate(LocalDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }
}
